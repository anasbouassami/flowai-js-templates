# The flow.ai Javascript Response Templates
Easy helper classes to create rich [flow.ai](https://flow.ai) response templates like cards, buttons and locations.

Reponse templates allow developers to render widgets at channels that support this like Facebook Messenger or the flow.ai Web client.

## What can you do?

* No need to write error prone JSON
* Full support for all template types

## Getting started
All classes are available for usage with Flow.ai Cloud functions. When you want to send rich responses using a webhook, install the library with NPM.

### Install

```bash
npm install --save flowai-js-templates
```

### Usage
When writing a Cloud function there is no need to require or import anything. With a webhook you'll need to include the library.

```js
const Template = require('flowai-js-templates')

const card = new Template.Card({
  title: "Cookie factory",
  subtitle: "Infinite lane 23"
})
```

### Sending back rich messages
You can send back rich messages in 3 different ways

#### Cloud code
Read more about [cloud code](https://docs.flow.ai/features/cloud-functions.html) how they work.

Within a cloud function you can directly send back response templates by returning them from your function.

##### Sending a single message with a single response

```js
(function(payload,originator,done) {

  // Create a speech bubble
  const text = new Text("Hi there!")

  // Create a message with fallback text
  const message = new Message("Hi, there")
  message.addResponse(text)

  return message
})
```

##### Sending a single message with multiple responses
```js
(function(payload,originator,done) {

  // Create a speech bubble
  const text = new Text("Hi there!")

  // Create a card
  const card = new Card({
    title: "Cookie factory",
    subtitle: "Infinite lane 23"
  })

  return new Message("Hi, the address of the Cookie factory is Infinite lane 23")
          .addResponse(text)
          .addResponse(card)
})
```

##### Sending back multiple messages
```js
(function(payload,originator,done) {

  // Create a speech bubble
  const text = new Text("Hi there!")

  // Create a card
  const card = new Card({
    title: "Cookie factory",
    subtitle: "Infinite lane 23"
  })

  return [
    new Message("Hi, there").addResponse(text),
    new Message("the address of the Cookie factory is Infinite lane 23").addResponse(card)
  ]
})
```

# Class Reference
{{>main~}}
